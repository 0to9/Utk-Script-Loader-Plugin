/*
 * This is the script file for the /craft command for the easy crafting script.
 * This script adds functionality for the /craft command via other helper
 * scripts. Current functionality includes paper and firework rocket crafting.
 *
 * DO NOT MODIFY ANY PORTION OF THIS SCRIPT FILE OR ANY OTHER SCRIPT FILES
 * EXCEPT WHERE INDICATED BY COMMENTS. DOING SO MAY CAUSE BREAK THE SCRIPT.
 * Ignore this warning only if you have read the scripting language specifications
 * thoroughly and are confident in your abilities to successfully modify the script.
 *
 * @author Utkarsh Priyam
 * @version December 22, 2020
 */

// Comment any modules you don't want activated
#include paper_crafting     "(command)craft/paper_crafting.txt"
#include rocket_crafting    "(command)craft/rocket_crafting.txt"

// Set to true if the command should require a crafting
// table in the player's inventory, and false otherwise
boolean REQUIRE_CRAFTING_TABLE = true;

// DO NOT MODIFY ANY CODE BEYOND THIS POINT
// (see warning in the file header comment)

import java.util;

import org.bukkit;
import org.bukkit.command;
import org.bukkit.entity;
import org.bukkit.inventory;

$exec craft : {
    if (!(sender instanceof Player))
        return;

    Player player = (Player) sender;
    PlayerInventory inventory = player.getInventory();
    if (REQUIRE_CRAFTING_TABLE && !inventory.contains(Material.CRAFTING_TABLE) &&
        inventory.getItemInOffHand().getType() != Material.CRAFTING_TABLE) {

        sender.sendMessage("You must have a crafting table in your inventory to use the \"craft\" sub-command.");
        return;
    }

    if (args.length == 0) {
        sender.sendMessage("The \"craft\" sub-command requires arguments.");
        return;
    }

    World playerWorld = player.getWorld();
    Location playerLocation = player.getLocation();

    switch (args[0]) {
        case "paper":
            $ifIncluded(paper_crafting) {
                paper_crafting::handleCraft(inventory, playerWorld, playerLocation);
            }
            $else {
                sender.sendMessage("Paper crafting for the \"craft\" sub-command is currently disabled.");
            }
            break;

        case "rockets":
            $ifIncluded(rocket_crafting) {
                rocket_crafting::handleCraft(player, inventory, playerWorld, playerLocation, args);
            }
            $else {
                sender.sendMessage("Rocket crafting for the \"craft\" sub-command is currently disabled.");
            }
            break;

        default:
            sender.sendMessage("You must specify which automated bulk crafting recipe you wish use.");
            break;
    }
}

$comp craft : {
    if (!(sender instanceof Player))
        return null;

    List list = null;
    switch (args.length) {
        case 1:
            list = new LinkedList();
            $ifIncluded(paper_crafting) {
                list.add("paper");
            }
            $ifIncluded(rocket_crafting) {
                list.add("rockets");
            }
            break;

        case 2:
            $ifIncluded(rocket_crafting) {
                if (args[0].equals("rockets")) {
                    list = new LinkedList();
                    list.add("1");
                    list.add("2");
                    list.add("3");
                }
            }
            break;
    }
    return list;
}

void addToInventory(ItemStack itemStack, int amount, Inventory inv, World world, Location loc) {
    while (amount > 0) {
        ItemStack copy = itemStack.clone();
        copy.setItemMeta(itemStack.getItemMeta());
        copy.setAmount(Math.min(amount, 64));
        amount -= 64;

        Map map = inv.addItem(new ItemStack[]{copy}); // no varargs in java code injector
        if (!map.isEmpty()) {
            Iterator it = map.keySet().iterator();
            while (it.hasNext()) {
                ItemStack stackToDrop = (ItemStack) map.get(it.next());
                if (stackToDrop != null && stackToDrop.getType() != Material.AIR && stackToDrop.getAmount() != 0)
                    world.dropItem(loc, stackToDrop);
            }
        }
    }
}